             PGM          
             DCL        VAR(&SIZE)      TYPE(*UINT)  LEN(4) VALUE(75)
             DCL        VAR(&MEM_PASE)  TYPE(*UINT)  LEN(4) VALUE(0)
             DCL        VAR(&POINTER)   TYPE(*PTR)   ADDRESS(*NULL)
             DCL        VAR(&HALF1)     TYPE(*UINT)  STG(*DEFINED) LEN(8) DEFVAR(&POINTER 1)
             DCL        VAR(&HALF2)     TYPE(*UINT)  STG(*DEFINED) LEN(8) DEFVAR(&POINTER 9)
             DCL        VAR(&SPP)       TYPE(*PTR)   ADDRESS(&POINTER)
             /* Qp2StartPase */
             DCL        VAR(&STARTER) TYPE(*CHAR) LEN(17) VALUE('/usr/lib/start32')
             DCL        VAR(&NL) TYPE(*CHAR) LEN(1) VALUE(X'00')       
             DCL        VAR(&CCSID) TYPE(*INT) VALUE(1208)              
             DCL        VAR(&ARGV_P) TYPE(*PTR) ADDRESS(&STARTER)      
             DCL        VAR(&NULL_P) TYPE(*PTR) ADDRESS(*NULL)         
             DCL        VAR(&RTCD) TYPE(*INT)                          
             /* Qp2dlopen */
             DCL        VAR(&PATH) TYPE(*CHAR) LEN(80) VALUE('/usr/lib/libc.a(shr.o)')                
             DCL        VAR(&FLAGS) TYPE(*UINT) VALUE(262146)          
             DCL        VAR(&JCCSID) TYPE(*INT) VALUE(0)                
             DCL        VAR(&ID) TYPE(*INT) LEN(8) VALUE(0)   
             
             CHGVAR     VAR(&STARTER) VALUE(&STARTER *TCAT &NL)                                   
             CALLPRC    PRC('Qp2RunPase') PARM((&STARTER) (&NULL_P +   
                          *BYVAL) (&NULL_P *BYVAL) (0 *BYVAL) +        
                          (&CCSID *BYVAL) (&ARGV_P) (&NULL_P +         
                          *BYVAL)) RTNVAL(&RTCD)                       
             IF         COND(&RTCD *NE -2) THEN(GOTO CMDLBL(FINE32))       
             CHGVAR     VAR(&PATH) VALUE(&PATH *TCAT &NL)              
             CALLPRC    PRC('Qp2dlopen') PARM((&PATH) (&FLAGS +        
                          *BYVAL) (&JCCSID *BYVAL)) RTNVAL(&ID) 
             IF         COND(&ID *EQ 0) THEN(GOTO CMDLBL(FINE32))   
  
             SNDPGMMSG  MSG(%CHAR(&MEM_PASE))
             SNDPGMMSG  MSG(%CHAR(&HALF1) *CAT ' - ' *CAT %CHAR(&HALF2))
             CALLPRC    PRC('QP2MALLOC2') PARM((&ID) (&SIZE) (&MEM_PASE) (&SPP))
             SNDPGMMSG  MSG(%CHAR(&HALF1) *CAT ' - ' *CAT %CHAR(&HALF2))
             SNDPGMMSG  MSG(%CHAR(&MEM_PASE))
FINE32:      CALLPRC    PRC('Qp2EndPase') RTNVAL(&RTCD)             

             CHGVAR     VAR(&STARTER) VALUE('/usr/lib/start64' *CAT &NL)                                   
             CALLPRC    PRC('Qp2RunPase') PARM((&STARTER) (&NULL_P +   
                          *BYVAL) (&NULL_P *BYVAL) (0 *BYVAL) +        
                          (&CCSID *BYVAL) (&ARGV_P) (&NULL_P +         
                          *BYVAL)) RTNVAL(&RTCD)                       
             IF         COND(&RTCD *NE -2) THEN(GOTO CMDLBL(FINE64))       
             CHGVAR     VAR(&PATH) VALUE('/usr/lib/libc.a(shr_64.o)' *TCAT &NL)              
             CALLPRC    PRC('Qp2dlopen') PARM((&PATH) (&FLAGS +        
                          *BYVAL) (&JCCSID *BYVAL)) RTNVAL(&ID) 
             IF         COND(&ID *EQ 0) THEN(GOTO CMDLBL(FINE64))   
  
             SNDPGMMSG  MSG(%CHAR(&MEM_PASE))
             SNDPGMMSG  MSG(%CHAR(&HALF1) *CAT ' - ' *CAT %CHAR(&HALF2))
             CALLPRC    PRC('QP2MALLOC2') PARM((&ID) (&SIZE) (&MEM_PASE) (&SPP))
             SNDPGMMSG  MSG(%CHAR(&HALF1) *CAT ' - ' *CAT %CHAR(&HALF2))
             SNDPGMMSG  MSG(%CHAR(&MEM_PASE))
FINE64:      CALLPRC    PRC('Qp2EndPase') RTNVAL(&RTCD)             
             ENDPGM
